"use client";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import SidePanel from "../components/ui/side-panel";
import { useRouter } from "next/router";
import { useAuth } from "@/lib/api/authContext";
import { useEffect } from "react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { user, loading } = useAuth();
  const router = useRouter();

  useEffect(() => {
    // Dès que le loading est terminé, si user est null, on redirige
    if (!loading && !user) {
      router.push("/auth/login"); // Redirection vers la page de connexion
    }
    // Note : on inclut router dans le tableau de dépendances pour éviter les warnings
  }, [loading, user, router]);
  return (
    <html data-theme="emerald" lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SidePanel>{children}</SidePanel>
      </body>
    </html>
  );
}
